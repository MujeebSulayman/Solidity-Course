// SPDX-License-Identifier: MIT
pragma solidity 0.8.14;

contract StoreEther  {
    uint256 public withdrawalLimit = 1 ether;
    mapping (address => uint256) public lastWithdrawTime;
    mapping (address => uint256) public balance;

    function depositFunds() public payable {
        //First, balance get increase by each deposit
        balance[msg.sender] += msg.value;
    }

    function withdrawFunds(uint256 _ethtoWithdraw) public {
        require(balance[msg.sender] >= _ethtoWithdraw, "Insufficient funds");
        //Limit the withdrawal
        require(_ethtoWithdraw >= withdrawalLimit, "You can not withdraw pass the withdrawal limit");
        //Limit the time allowed to withdraw
        require(block.timestamp >= lastWithdrawTime[msg.sender] + 1 weeks);

        payable(msg.sender).transfer(_ethtoWithdraw);
    }
}